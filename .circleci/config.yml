# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:

  style_check:
    working_directory: /tedana
    docker:
      - image: tedana/tedana-dev
    steps:
      - checkout
      - run:
          name: Run style check
          command: |
            source ./dev_tools/run_tests.sh && run_lint_tests

  py35_unit_tests:
    working_directory: /tedana
    docker:
      - image: tedana/tedana-dev
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: |
            source ./dev_tools/run_tests.sh && run_unit_test tedana_py35
            mkdir /coverage
            mv /tedana/.coverage /coverage/.coverage.py35
      - store_artifacts:
          path: /coverage
      - persist_to_workspace:
          root: /coverage
          paths:
              - .coverage.py35

  py36_unit_tests:
    working_directory: /tedana
    docker:
      - image: tedana/tedana-dev
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: |
            source ./dev_tools/run_tests.sh && run_unit_test tedana_py36
            mkdir /coverage
            mv /tedana/.coverage /coverage/.coverage.py36
      - store_artifacts:
          path: /coverage
      - persist_to_workspace:
          root: /coverage
          paths:
              - .coverage.py36

  py37_unit_tests:
    working_directory: /tedana
    docker:
      - image: tedana/tedana-dev
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: |
            source ./dev_tools/run_tests.sh && run_unit_test tedana_py37
            mkdir /coverage
            mv /tedana/.coverage /coverage/.coverage.py37
      - store_artifacts:
          path: /coverage
      - persist_to_workspace:
          root: /coverage
          paths:
              - .coverage.py37

  three_echo_rest:
    working_directory: /tedana
    docker:
      - image: tedana/tedana-dev
    steps:
      - checkout
      - run:
          name: Run three-echo dataset
          no_output_timeout: 40m
          command: |
            source ./dev_tools/run_tests.sh && run_integration_tests -k three
            mkdir /coverage
            mv /tedana/.coverage /coverage/.coverage.three_echo
      - store_artifacts:
          path: /data/three-echo
      - store_artifacts:
          path: /coverage
      - persist_to_workspace:
          root: /coverage
          paths:
              - .coverage.three_echo

  five_echo_task:
    working_directory: /tedana
    docker:
      - image: tedana/tedana-dev
    steps:
      - checkout
      - run:
          name: Run five-echo dataset
          no_output_timeout: 40m
          command: |
            source ./dev_tools/run_tests.sh && \
              run_integration_tests --include-five-echo -k five
            mkdir /coverage
            mv /tedana/.coverage /coverage/.coverage.five_echo
      - store_artifacts:
          path: /data/five-echo
      - store_artifacts:
          path: /coverage
      - persist_to_workspace:
          root: /coverage
          paths:
              - .coverage.five_echo

  merge_coverage:
    working_directory: /tedana
    docker:
      - image: tedana/tedana-dev
    steps:
      - attach_workspace:
          at: /coverage
      - run:
          name: Merge coverage files
          command: |
            source activate tedana_py36
            cd /coverage
            coverage combine
            coverage xml
      - store_artifacts:
          path: /coverage
      - codecov/upload:
          file: /coverage/coverage.xml

workflows:
  version: 2.1
  build_test:
    jobs:
      - style_check
      - py35_unit_tests:
          requires:
            - style_check
      - py36_unit_tests:
          requires:
            - style_check
      - py37_unit_tests:
          requires:
            - style_check
      - three_echo_rest:
          requires:
            - style_check
      - five_echo_task:
          requires:
            - style_check
      - merge_coverage:
          requires:
            - py35_unit_tests
            - py36_unit_tests
            - py37_unit_tests
            - three_echo_rest
            - five_echo_task
