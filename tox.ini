[tox]
requires =
  tox>=4
  tox-uv
envlist =
  py3{9,10,11,12,13}-latest
  py39-min
skip_missing_interpreters = true

# Configuration that allows us to split tests across GitHub runners effectively
[gh-actions]
python =
  3.9: py39
  3.10: py310
  3.11: py311
  3.12: py312
  3.13: py313

[gh-actions:env]
DEPENDS =
  min: min
  latest: latest

[testenv]
description = Pytest with coverage
labels = test
pass_env =
  # getpass.getuser() sources for Windows:
  LOGNAME
  USER
  LNAME
  USERNAME
  # Pass user color preferences through
  PY_COLORS
  FORCE_COLOR
  NO_COLOR
  CLICOLOR
  CLICOLOR_FORCE
  PYTHON_GIL
extras =
  tests

# Configure min environments
runner =
  !min: uv-venv-lock-runner
  min: uv-venv-runner
uv_resolution =
  min: lowest-direct

commands =
  pytest --skipintegration --cov-append --cov-report term-missing --cov=tedana tedana {posargs}

[testenv:three-echo]
base = testenv
extras = tests
commands =
  pytest --log-cli-level=INFO --cov-append --cov-report term-missing --cov=tedana \
    -k test_integration_three_echo tedana/tests/test_integration.py {posargs}

[testenv:four-echo]
extras =
  tests
commands =
  pytest --log-cli-level=INFO --cov-append --cov-report term-missing --cov=tedana \
    -k test_integration_four_echo tedana/tests/test_integration.py {posargs}

[testenv:five-echo]
extras =
  tests
commands =
  pytest --log-cli-level=INFO --cov-append --cov-report term-missing --cov=tedana \
    -k test_integration_five_echo tedana/tests/test_integration.py {posargs}

[testenv:reclassify]
extras =
  tests
commands =
  pytest --log-cli-level=INFO --cov-append --cov-report term-missing --cov=tedana \
    -k test_integration_reclassify tedana/tests/test_integration.py {posargs}

[testenv:t2smap]
extras =
  tests
commands =
  pytest --log-cli-level=INFO --cov-append --cov-report term-missing --cov=tedana \
    -k test_integration_t2smap tedana/tests/test_integration.py {posargs}

[testenv:lint]
runner = uv-venv-lock-runner
commands =
  black --check --diff tedana
  flake8 tedana
