{
    "tree_id": "minimal_decision_tree_test1",
    "info": "Proposed minimal decision tree",
    "report": "This is based on the minimal criteria of the original MEICA decision tree without the more aggressive noise removal steps",
    "refs": "Kundu 2013; DuPre, Salo, 2021",
    "necessary_metrics": [
        "kappa",
        "rho",
        "countsigFS0",
        "countsigFT2",
        "dice_FS0",
        "dice_FT2",
        "signal-noise_t",
        "variance explained"
    ],
    "intermediate_classifications": [
        "provisionalaccept",
        "provisionalreject"
    ],
    "classification_tags": [
        "Likely BOLD",
        "Unlikely BOLD",
        "Low variance"
    ],
    "nodes": [
        {
            "functionname": "manual_classify",
            "parameters": {
                "new_classification": "unclassified",
                "decide_comps": "all"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "All components are initially labeled as 'unclassified'.",
                "clear_classification_tags": true,
                "dont_warn_reclassify": true
            },
            "_comment": "This step prepares the components to be classified by the decision tree."
        },
        {
            "functionname": "dec_left_op_right",
            "parameters": {
                "if_true": "rejected",
                "if_false": "nochange",
                "decide_comps": "all",
                "op": ">",
                "left": "rho",
                "right": "kappa"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "Any components with rho greater than kappa are rejected.",
                "tag_if_true": "Unlikely BOLD"
            },
            "_comment": "Higher rho than kappa means that the component better fits the TE-independence (S0) model than the TE-dependence (T2*) model."
        },
        {
            "functionname": "dec_left_op_right",
            "parameters": {
                "if_true": "rejected",
                "if_false": "nochange",
                "decide_comps": "all",
                "op": ">",
                "left": "countsigFS0",
                "right": "countsigFT2"
            },
            "kwargs": {
                "left2": "countsigFT2",
                "op2": ">",
                "right2": 0,
                "log_extra_info": "",
                "log_extra_report": "Any components with more voxels that are significant based on the S0 model's F-statistics than the T2* model's are rejected, as long as there is at least one significant voxel for the T2 model.",
                "tag_if_true": "Unlikely BOLD"
            },
            "_comment": "This step rejects any components that have more significantly S0-associated voxels than T2*-associated voxels."
        },
        {
            "functionname": "calc_median",
            "parameters": {
                "decide_comps": "all",
                "metric_name": "variance explained",
                "median_label": "varex"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "The median variance explained is calculated across all components, for later steps."
            },
            "_comment": ""
        },
        {
            "functionname": "dec_left_op_right",
            "parameters": {
                "if_true": "rejected",
                "if_false": "nochange",
                "decide_comps": "all",
                "op": ">",
                "left": "dice_FS0",
                "right": "dice_FT2"
            },
            "kwargs": {
                "left2": "variance explained",
                "op2": ">",
                "right2": "median_varex",
                "log_extra_info": "",
                "log_extra_report": "Any components with higher S0 model beta map-F-statistic map Dice similarity index than T2 model beta map-F-statistic map Dice similarity index and greater than median variance explained are rejected.",
                "tag_if_true": "Unlikely BOLD"
            },
            "_comment": "This step essentially rejects any high-variance components where significant voxels in the F-stat map overlap more with highly S0-associated voxels than T2*-associated voxels."
        },
        {
            "functionname": "dec_left_op_right",
            "parameters": {
                "if_true": "rejected",
                "if_false": "nochange",
                "decide_comps": "all",
                "op": ">",
                "left": 0,
                "right": "signal-noise_t"
            },
            "kwargs": {
                "left2": "variance explained",
                "op2": ">",
                "right2": "median_varex",
                "log_extra_info": "",
                "log_extra_report": "Any components with negative t-statistic comparing distribution of T2* model F-statistics from voxels in clusters to those of voxels not in clusters and variance explained greater than median are rejected.",
                "tag_if_true": "Unlikely BOLD"
            },
            "_comment": "This essentially rejects any high-variance components exhibiting more 'speckled' T2*-associated voxels than 'clustered' ones."
        },
        {
            "functionname": "calc_kappa_elbow",
            "parameters": {
                "decide_comps": "all"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "The kappa elbow is calculated from all components, for later steps."
            },
            "_comment": ""
        },
        {
            "functionname": "calc_rho_elbow",
            "parameters": {
                "decide_comps": "all"
            },
            "kwargs": {
                "subset_decide_comps": "unclassified",
                "rho_elbow_type": "liberal",
                "log_extra_info": "",
                "log_extra_report": "The 'liberal' rho elbow is calculated from all and unclassified components, for later steps."
            },
            "_comment": "This step determines the 'rho elbow' based on the rho values for all of the components, as well as just the unclassified components. It calculates the elbow for each set of components and then takes the maximum of the two."
        },
        {
            "functionname": "dec_left_op_right",
            "parameters": {
                "if_true": "provisionalaccept",
                "if_false": "provisionalreject",
                "decide_comps": "unclassified",
                "op": ">=",
                "left": "kappa",
                "right": "kappa_elbow_kundu"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "Any unclassified components with kappa greater than or equal to the kappa elbow are provisionally accepted. Any remaining unclassified components are provisionally rejected."
            },
            "_comment": "This step provisionally classifies all 'unclassified' components."
        },
        {
            "functionname": "dec_left_op_right",
            "parameters": {
                "if_true": "accepted",
                "if_false": "nochange",
                "decide_comps": "provisionalaccept",
                "op": ">",
                "left": "kappa",
                "right": "rho"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "Any provisionally accepted components with kappa greater than two times rho are accepted.",
                "right_scale": 2,
                "tag_if_true": "Likely BOLD"
            },
            "_comment": ""
        },
        {
            "functionname": "dec_left_op_right",
            "parameters": {
                "if_true": "provisionalreject",
                "if_false": "nochange",
                "decide_comps": [
                    "provisionalreject",
                    "provisionalaccept"
                ],
                "op": ">",
                "left": "rho",
                "right": "rho_elbow_liberal"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "Any provisionally accepted or provisionally rejected components with rho values greater than the liberal rho elbow are provisionally rejected."
            },
            "_comment": ""
        },
        {
            "functionname": "dec_variance_lessthan_thresholds",
            "parameters": {
                "if_true": "accepted",
                "if_false": "nochange",
                "decide_comps": "provisionalreject"
            },
            "kwargs": {
                "var_metric": "variance explained",
                "log_extra_info": "",
                "log_extra_report": "Any provisionally rejected components with variance explained less than ? are accepted.",
                "single_comp_threshold": 0.1,
                "all_comp_threshold": 1.0,
                "tag_if_true": "Low variance"
            },
            "_comment": "This step flags remaining low-variance components to accept because they don't explain enough variance to be worth further reducing the degrees of freedom of the denoised data."
        },
        {
            "functionname": "manual_classify",
            "parameters": {
                "new_classification": "accepted",
                "decide_comps": "provisionalaccept"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "All remaining provisionally accepted components are accepted.",
                "tag": "Likely BOLD"
            },
            "_comment": ""
        },
        {
            "functionname": "manual_classify",
            "parameters": {
                "new_classification": "rejected",
                "decide_comps": [
                    "provisionalreject",
                    "unclassified"
                ]
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "All remaining unclassified or provisionally rejected components are rejected.",
                "tag": "Unlikely BOLD"
            },
            "_comment": "Are unclassified components even possible at this point?"
        }
    ]
}
