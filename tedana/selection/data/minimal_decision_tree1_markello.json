{
    "tree_id": "minimal_decision_tree_test1",
    "info": "First test of a minimal decision tree",
    "report": "This is based on the minimal criteria of the original MEICA decision tree without the more agressive noise removal steps",
    "refs": "Kundu 2013",
    "necessary_metrics": [
        "kappa",
        "rho"
    ],
    "nodes": [
        {
            "functionname": "manual_classify",
            "parameters": {
                "iftrue": "unclassified",
                "decide_comps": "all"
            },
            "kwargs": {
                "log_extra_info": "Initializing all classifications as unclassified and all rationales as blank",
                "log_extra_report": "",
                "clear_rationale": "True"
            }
        },
        {
            "functionname": "metric1_greaterthan_metric2",
            "parameters": {
                "iftrue": "reject",
                "iffalse": "nochange",
                "decide_comps": "unclassified",
                "metric1": "rho",
                "metric2": "kappa"
            },
            "kwargs": {
                "log_extra_info": "Reject if Kappa>Rho",
                "log_extra_report": "",
                "metric2_scale": 1
            }
        },
        {
            "functionname": "metric1_greaterthan_metric2",
            "parameters": {
                "iftrue": "reject",
                "iffalse": "nochange",
                "decide_comps": "unclassified",
                "metric1": "countsig_in_S0clusters",
                "metric2": "countsig_in_T2clusters"
            },
            "kwargs": {
                "log_extra_info": "Reject if countsig_in S0clusters > T2clusters",
                "log_extra_report": "",
                "metric2_scale": 1
            }
        },
        {
            "functionname": "metric1_greaterthan_metric2",
            "parameters": {
                "iftrue": "reject",
                "iffalse": "nochange",
                "decide_comps": "unclassified",
                "metric1": "DICE_S0",
                "metric2": "DICE_T2"
            },
            "kwargs": {
                "log_extra_info": "Reject if DICE S0>T2",
                "log_extra_report": "",
                "metric2_scale": 1
            }
        },
        {
            "functionname": "metric1_greaterthan_metric2",
            "parameters": {
                "iftrue": "reject",
                "iffalse": "nochange",
                "decide_comps": "unclassified",
                "metric1": 0,
                "metric2": "T2fitdiff_invsout_ICAmap_Tstat"
            },
            "kwargs": {
                "log_extra_info": "Reject if T2fitdiff_invsout_ICAmap_Tstat<0",
                "log_extra_report": "",
                "metric2_scale": 1
            }
        },
        {
            "functionname": "dmetric_gt_elbow",
            "parameters": {
                "iftrue": "provisionalaccept",
                "iffalse": "provisionalreject",
                "decide_comps": "unclassified",
                "decidemetric": "kappa"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "",
                "elbowparam1": 1,
                "elbowparam2": 2
            }
        },
        {
            "functionname": "dmetric_gt_elbow",
            "parameters": {
                "iftrue": "provisionalreject",
                "iffalse": "nochange",
                "decide_comps": "provisionalaccept",
                "decidemetric": "rho"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "",
                "elbowparam1": 1,
                "elbowparam2": 2
            }
        },
        {
            "functionname": "variance_lt_thresholds",
            "parameters": {
                "iftrue": "nochange",
                "iffalse": "ignore",
                "decide_comps": "provisionalreject",
                "varmetric": "varexp"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "",
                "single_comp_threshold": 0.1,
                "all_comp_threshold": 1.0
            }
        },
        {
            "functionname": "manual_classify",
            "parameters": {
                "iftrue": "accept",
                "decide_comps": "provisionalaccept"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "",
                "clear_rationale": "False"
            }
        },
        {
            "functionname": "manual_classify",
            "parameters": {
                "iftrue": "reject",
                "decide_comps": "provisionalreject"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "",
                "clear_rationale": "False"
            }
        }
    ]
}
